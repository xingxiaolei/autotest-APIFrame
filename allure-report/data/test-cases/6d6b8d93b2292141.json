{
  "uid" : "6d6b8d93b2292141",
  "name" : "test_case[item5]",
  "fullName" : "testcase.test_case#test_case",
  "historyId" : "7413167d684b4285e4fc132fec9b0be7",
  "time" : {
    "start" : 1608540369138,
    "stop" : 1608540369162,
    "duration" : 24
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert not {\"root['code']\": {'new_value': '3', 'old_value': '0'}}\n +  where {\"root['code']\": {'new_value': '3', 'old_value': '0'}} = <built-in method get of DeepDiff object at 0x00000000045FB200>('values_changed', {})\n +    where <built-in method get of DeepDiff object at 0x00000000045FB200> = {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}}.get\n +      where {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}} = DeepDiff({'code': '0', 'data': {'brand': 'testfan', 'price': '645', 'skuId': 1, 'skuName': 'ptest-1', ...}, 'message': 'success'}, {'code': '3', 'message': 'success'})",
  "statusTrace" : "item = {'case_num': 'neeo_006', 'cookies': '', 'data': '', 'expect': '{\"code\": \"3\", \"message\": \"success\"}', ...}\n\n    @pytest.mark.parametrize('item', case_list)\n    def test_case(item):\n        result, expected = RequestsOperate(current_case=item, case_list=case_list).get_response()\n>       assert not DeepDiff(result, expected).get('values_changed', {})\nE       assert not {\"root['code']\": {'new_value': '3', 'old_value': '0'}}\nE        +  where {\"root['code']\": {'new_value': '3', 'old_value': '0'}} = <built-in method get of DeepDiff object at 0x00000000045FB200>('values_changed', {})\nE        +    where <built-in method get of DeepDiff object at 0x00000000045FB200> = {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}}.get\nE        +      where {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}} = DeepDiff({'code': '0', 'data': {'brand': 'testfan', 'price': '645', 'skuId': 1, 'skuName': 'ptest-1', ...}, 'message': 'success'}, {'code': '3', 'message': 'success'})\n\ntestcase\\test_case.py:16: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_case"
  }, {
    "name" : "host",
    "value" : "FD2020505"
  }, {
    "name" : "thread",
    "value" : "7588-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_case"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "item",
    "value" : "{'case_num': 'neeo_006', 'title': '查询库存', 'url': 'http://www.neeo.cc:6002/pinter/com/getSku', 'method': 'get', 'params': '{\"id\":1}', 'data': '', 'json': '', 'cookies': '', 'headers': '', 'expect': '{\"code\": \"3\", \"message\": \"success\"}'}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ {
      "uid" : "a6245310a17721d0",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert not {\"root['code']\": {'new_value': '3', 'old_value': '0'}}\n +  where {\"root['code']\": {'new_value': '3', 'old_value': '0'}} = <built-in method get of DeepDiff object at 0x0000000003E76200>('values_changed', {})\n +    where <built-in method get of DeepDiff object at 0x0000000003E76200> = {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}}.get\n +      where {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}} = DeepDiff({'code': '0', 'data': {'brand': 'testfan', 'price': '710', 'skuId': 1, 'skuName': 'ptest-1', ...}, 'message': 'success'}, {'code': '3', 'message': 'success'})",
      "time" : {
        "start" : 1608540204268,
        "stop" : 1608540204302,
        "duration" : 34
      }
    }, {
      "uid" : "4a30674a9326725",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert not {\"root['code']\": {'new_value': '3', 'old_value': '0'}}\n +  where {\"root['code']\": {'new_value': '3', 'old_value': '0'}} = <built-in method get of DeepDiff object at 0x0000000003DDD200>('values_changed', {})\n +    where <built-in method get of DeepDiff object at 0x0000000003DDD200> = {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}}.get\n +      where {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}} = DeepDiff({'code': '0', 'data': {'brand': 'testfan', 'price': '331', 'skuId': 1, 'skuName': 'ptest-1', ...}, 'message': 'success'}, {'code': '3', 'message': 'success'})",
      "time" : {
        "start" : 1608540124743,
        "stop" : 1608540124766,
        "duration" : 23
      }
    }, {
      "uid" : "469523b0559d55ea",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert not {\"root['code']\": {'new_value': '3', 'old_value': '0'}}\n +  where {\"root['code']\": {'new_value': '3', 'old_value': '0'}} = <built-in method get of DeepDiff object at 0x00000000045EB200>('values_changed', {})\n +    where <built-in method get of DeepDiff object at 0x00000000045EB200> = {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}}.get\n +      where {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}} = DeepDiff({'code': '0', 'data': {'brand': 'testfan', 'price': '152', 'skuId': 1, 'skuName': 'ptest-1', ...}, 'message': 'success'}, {'code': '3', 'message': 'success'})",
      "time" : {
        "start" : 1608539627353,
        "stop" : 1608539627375,
        "duration" : 22
      }
    }, {
      "uid" : "6317c5d89384ffcf",
      "status" : "failed",
      "statusDetails" : "AssertionError: assert not {\"root['code']\": {'new_value': '3', 'old_value': '0'}}\n +  where {\"root['code']\": {'new_value': '3', 'old_value': '0'}} = <built-in method get of DeepDiff object at 0x0000000003DEA200>('values_changed', {})\n +    where <built-in method get of DeepDiff object at 0x0000000003DEA200> = {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}}.get\n +      where {'dictionary_item_removed': [root['data']], 'values_changed': {\"root['code']\": {'new_value': '3', 'old_value': '0'}}} = DeepDiff({'code': '0', 'data': {'brand': 'testfan', 'price': '788', 'skuId': 1, 'skuName': 'ptest-1', ...}, 'message': 'success'}, {'code': '3', 'message': 'success'})",
      "time" : {
        "start" : 1608538501331,
        "stop" : 1608538501358,
        "duration" : 27
      }
    }, {
      "uid" : "857fb6dada02a614",
      "status" : "broken",
      "statusDetails" : "requests.exceptions.ConnectionError: HTTPConnectionPool(host='www.neeo.cc', port=6008): Max retries exceeded with url: /pinter/com/getSku?id=1 (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000000003D7A8D0>: Failed to establish a new connection: [WinError 10061] 由于目标计算机积极拒绝，无法连接。'))",
      "time" : {
        "start" : 1608538422091,
        "stop" : 1608538423128,
        "duration" : 1037
      }
    }, {
      "uid" : "38e9202af5dd95f9",
      "status" : "broken",
      "statusDetails" : "requests.exceptions.ConnectionError: HTTPConnectionPool(host='www.neeo.cc', port=6008): Max retries exceeded with url: /pinter/com/getSku?id=1 (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000000003DBDDA0>: Failed to establish a new connection: [WinError 10061] 由于目标计算机积极拒绝，无法连接。'))",
      "time" : {
        "start" : 1608538360164,
        "stop" : 1608538361223,
        "duration" : 1059
      }
    } ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "6d6b8d93b2292141.json",
  "parameterValues" : [ "{'case_num': 'neeo_006', 'title': '查询库存', 'url': 'http://www.neeo.cc:6002/pinter/com/getSku', 'method': 'get', 'params': '{\"id\":1}', 'data': '', 'json': '', 'cookies': '', 'headers': '', 'expect': '{\"code\": \"3\", \"message\": \"success\"}'}" ]
}